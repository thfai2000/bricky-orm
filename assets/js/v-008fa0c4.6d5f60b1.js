"use strict";(self.webpackChunktaichi_orm=self.webpackChunktaichi_orm||[]).push([[968],{9359:(n,s,a)=>{a.r(s),a.d(s,{data:()=>t});const t={key:"v-008fa0c4",path:"/guide/query-examples/filtering.html",title:"Select and Filter",lang:"en-US",frontmatter:{},excerpt:"",headers:[{level:2,title:"Select target model and relations",slug:"select-target-model-and-relations",children:[]},{level:2,title:"Select target model and relations by findOptions",slug:"select-target-model-and-relations-by-findoptions",children:[]},{level:2,title:"Select target model with relations match criteria",slug:"select-target-model-with-relations-match-criteria",children:[]},{level:2,title:"Select target model with certain number of related records",slug:"select-target-model-with-certain-number-of-related-records",children:[]}],filePathRelative:"guide/query-examples/filtering.md",git:{updatedTime:1639159614e3,contributors:[{name:"Eddie Tang",email:"thfai2000@gmail.com",commits:1}]}}},3193:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const t=(0,a(6252).uE)('<h1 id="select-and-filter" tabindex="-1"><a class="header-anchor" href="#select-and-filter" aria-hidden="true">#</a> Select and Filter</h1><h2 id="select-target-model-and-relations" tabindex="-1"><a class="header-anchor" href="#select-target-model-and-relations" aria-hidden="true">#</a> Select target model and relations</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// Simply select shop, each with array of products</span>\n<span class="token keyword">let</span> shops <span class="token operator">=</span> <span class="token keyword">await</span> Shop<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  selectProps<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;products&#39;</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h2 id="select-target-model-and-relations-by-findoptions" tabindex="-1"><a class="header-anchor" href="#select-target-model-and-relations-by-findoptions" aria-hidden="true">#</a> Select target model and relations by <code>findOptions</code></h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// find shops with related products which are only in color &#39;red&#39;</span>\n<span class="token keyword">let</span> shops <span class="token operator">=</span> <span class="token keyword">await</span> Shop<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  select<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">// select the computed property &#39;products&#39;</span>\n    products<span class="token operator">:</span> <span class="token punctuation">{</span>\n      where<span class="token operator">:</span> <span class="token punctuation">{</span>\n        color<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  where<span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token comment">//...</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><h2 id="select-target-model-with-relations-match-criteria" tabindex="-1"><a class="header-anchor" href="#select-target-model-with-relations-match-criteria" aria-hidden="true">#</a> Select target model with relations match criteria</h2><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>\n<span class="token comment">// find all products which belongs to a Shop</span>\n<span class="token keyword">let</span> products <span class="token operator">=</span> <span class="token keyword">await</span> Product<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">where</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>root<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> root<span class="token punctuation">.</span><span class="token function">shop</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// find all products which belongs to Shop with location &#39;Hong Kong&#39;</span>\n<span class="token keyword">let</span> products <span class="token operator">=</span> <span class="token keyword">await</span> Product<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">where</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>root<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> root<span class="token punctuation">.</span><span class="token function">shop</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    where<span class="token operator">:</span> <span class="token punctuation">{</span>\n      location<span class="token operator">:</span> <span class="token string">&#39;Hong Kong&#39;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exists</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// another approach (if the &#39;hasMany&#39; relationship is not defined in Model Schema)</span>\n<span class="token keyword">await</span> Product<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">where</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>root<span class="token punctuation">,</span> Exists<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">Exists</span><span class="token punctuation">(</span> Shop<span class="token punctuation">.</span><span class="token function">dataset</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    where<span class="token operator">:</span> <span class="token punctuation">{</span>\n      shopId<span class="token operator">:</span> root<span class="token punctuation">.</span>id<span class="token punctuation">,</span>\n      location<span class="token operator">:</span> <span class="token string">&#39;Hong Kong&#39;</span>\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br></div></div><h2 id="select-target-model-with-certain-number-of-related-records" tabindex="-1"><a class="header-anchor" href="#select-target-model-with-certain-number-of-related-records" aria-hidden="true">#</a> Select target model with certain number of related records</h2><p>Besides, the funtion call of <code>ComputeProperty</code> returns a <code>Scalar</code> that can be transformed into subquery like &quot;SELECT count(*) FROM ...&quot;</p><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code><span class="token comment">// find all shops which has more than 5 products</span>\n<span class="token keyword">let</span> shops <span class="token operator">=</span> <span class="token keyword">await</span> Shop<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">where</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>root<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> root<span class="token punctuation">.</span><span class="token function">products</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">greaterThan</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n\n<span class="token comment">// another approach (if the &#39;hasMany&#39; relationship is not defined in Model Schema)</span>\n<span class="token keyword">let</span> shops <span class="token operator">=</span> <span class="token keyword">await</span> Shop<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n  <span class="token function-variable function">where</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span>root<span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> Product<span class="token punctuation">.</span><span class="token function">dataset</span><span class="token punctuation">(</span><span class="token punctuation">{</span>\n    where<span class="token operator">:</span> <span class="token punctuation">{</span>\n      shopId<span class="token operator">:</span> root<span class="token punctuation">.</span>id\n    <span class="token punctuation">}</span>\n  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toDScalar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">count</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">greaterThan</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div>',10),p={},e=(0,a(3744).Z)(p,[["render",function(n,s){return t}]])},3744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,t]of s)a[n]=t;return a}}}]);